# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cost_table.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import csv


class Ui_dlgCosts(object):
    def setupUi(self, dlgCosts):
        dlgCosts.setObjectName("dlgCosts")
        dlgCosts.resize(676, 274)
        self.tblCosts = QtWidgets.QTableWidget(dlgCosts)
        self.tblCosts.setGeometry(QtCore.QRect(10, 20, 651, 211))
        self.tblCosts.setAlternatingRowColors(True)
        self.tblCosts.setObjectName("tblCosts")
        self.tblCosts.setColumnCount(6)
        self.tblCosts.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCosts.setHorizontalHeaderItem(5, item)
        self.exportBtn = QtWidgets.QPushButton(dlgCosts)
        self.exportBtn.setGeometry(QtCore.QRect(460, 240, 90, 28))
        self.exportBtn.setObjectName("exportBtn")
        self.closeBtn = QtWidgets.QPushButton(dlgCosts)
        self.closeBtn.setGeometry(QtCore.QRect(570, 240, 90, 28))
        self.closeBtn.setObjectName("closeBtn")

        self.retranslateUi(dlgCosts)
        self.exportBtn.clicked.connect(self.export_table_data)  # type: ignore
        self.closeBtn.clicked.connect(dlgCosts.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(dlgCosts)

    def retranslateUi(self, dlgCosts):
        _translate = QtCore.QCoreApplication.translate
        dlgCosts.setWindowTitle(_translate("dlgCosts", "Koszty map w powiatach"))
        item = self.tblCosts.horizontalHeaderItem(0)
        item.setText(_translate("dlgCosts", "Powiat"))
        item = self.tblCosts.horizontalHeaderItem(1)
        item.setText(_translate("dlgCosts", "powierzchnia"))
        item = self.tblCosts.horizontalHeaderItem(2)
        item.setText(_translate("dlgCosts", "koszt (1:500)"))
        item = self.tblCosts.horizontalHeaderItem(3)
        item.setText(_translate("dlgCosts", "koszt (1:1000)"))
        item = self.tblCosts.horizontalHeaderItem(4)
        item.setText(_translate("dlgCosts", "koszt (1:2000)"))
        item = self.tblCosts.horizontalHeaderItem(5)
        item.setText(_translate("dlgCosts", "koszt (1:5000)"))
        self.exportBtn.setText(_translate("dlgCosts", "Eksportuj"))
        self.closeBtn.setText(_translate("dlgCosts", "Zamknij"))

    def export_table_data(self):
        csv_file_path, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save CSV file", "", "CSV Files (*.csv)")
        if csv_file_path:
            with open(csv_file_path, 'w', newline='') as csv_file:
                csv_writer = csv.writer(csv_file)
                # Write the table headers
                headers = [self.tblCosts.horizontalHeaderItem(col).text() for col in range(self.tblCosts.columnCount())]
                csv_writer.writerow(headers)

                # Write the table data
                for row in range(self.tblCosts.rowCount()):
                    row_data = [self.tblCosts.item(row, col).text() for col in range(self.tblCosts.columnCount())]
                    csv_writer.writerow(row_data)

            QtWidgets.QMessageBox.information(None, "Eksport", f"Dane wyeksportowano do {csv_file_path}",QtWidgets.QMessageBox.Ok)
